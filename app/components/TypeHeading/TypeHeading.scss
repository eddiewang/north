////
/// TypeHeading
/// @group components/TypeHeading/TypeHeading
////

$accepted-heading-levels: 1, 2, 3, 4, 5;

@mixin sg-TypeHeading($level) {
  @if type-of($level) != number or index($accepted-heading-levels, $level) == null {
    @error 'The Heading level `#{$level}` does not exist. Available levels: #{$accepted-heading-levels}';
  }
  max-width: sg-layout-width(type-content);

  // Heading 1
  @if $level == 1 {
    margin-bottom: 0.3em;
    font-size: sg-font-size(h1);
    font-weight: 700;
    letter-spacing: -0.1rem;
    line-height: 1.3;

    @media only screen and (min-width: sg-breakpoint(portrait, '1080p')) {
      margin-bottom: 0.5em;
      font-size: sg-font-size(h1, desktop);
    }
  }

  // Heading 2
  @if $level == 2 {
    margin-bottom: 0.3em;
    font-size: sg-font-size(h2);
    font-weight: 700;
    letter-spacing: -0.1rem;
    line-height: 1.3;

    @media only screen and (min-width: sg-breakpoint(portrait, '1080p')) {
      margin-bottom: 0.5em;
      font-size: sg-font-size(h2, desktop);
    }
  }

  // Heading 3
  @if $level == 3 {
    margin-bottom: 0.8em;
    font-size: sg-font-size(h3);
    font-weight: 500;
    line-height: 1.2;

    @media only screen and (min-width: sg-breakpoint(portrait, '1080p')) {
      margin-bottom: 1em;
    }
  }

  // Heading 4
  @if $level == 4 {
    margin-bottom: 0.8em;
    font-size: sg-font-size(h4);
    font-weight: 500;
    line-height: 1.6;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
  }

  // Heading 5
  @if $level == 5 {
    margin-bottom: 0.8em;
    font-size: sg-font-size(h5);
    font-weight: 400;
    line-height: 1.6;
  }
}

///
/// Heading level classes

.TypeHeading {
  color: sg-color(ink, darker);

  &:last-child {
    margin-bottom: 0;
  }
}

.level1 {
  @include sg-TypeHeading(1);
}

.level2 {
  @include sg-TypeHeading(2);
}

.level3 {
  @include sg-TypeHeading(3);
}

.level4 {
  @include sg-TypeHeading(4);
}

// --- Colors
.isInverse {
  color: sg-color(white);
}
